{"remainingRequest":"C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\node_modules\\babel-loader\\lib\\index.js!C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js??ref--0-0!C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\src\\ComplexStorage.vue?vue&type=script&lang=js&","dependencies":[{"path":"C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\src\\ComplexStorage.vue","mtime":1592803098000},{"path":"C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\node_modules\\babel-loader\\lib\\index.js","mtime":315532800000},{"path":"C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Projects\\Sol\\my-sweet-vue-dapp\\vapp\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":["import \"core-js/modules/es6.object.define-property\";\nimport \"core-js/modules/es6.object.define-properties\";\nimport \"core-js/modules/es7.object.get-own-property-descriptors\";\nimport \"core-js/modules/es6.array.for-each\";\nimport \"core-js/modules/es6.array.filter\";\nimport \"core-js/modules/web.dom.iterable\";\nimport \"core-js/modules/es6.object.keys\";\nimport _defineProperty from \"C:/Projects/Sol/my-sweet-vue-dapp/vapp/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\n//\nimport { mapGetters } from 'vuex';\nexport default {\n  name: 'ComplexStorage',\n  computed: _objectSpread(_objectSpread(_objectSpread({}, mapGetters('contracts', ['getContractData'])), mapGetters('drizzle', ['isDrizzleInitialized'])), {}, {\n    get_uintarray: function get_uintarray() {\n      return this.getContractData({\n        contract: 'ComplexStorage',\n        method: 'get_uintarray'\n      });\n    },\n    singleDD: function singleDD() {\n      return this.getContractData({\n        contract: 'ComplexStorage',\n        method: 'singleDD'\n      });\n    }\n  }),\n  data: function data() {\n    return {\n      sample: {\n        get_uintarray: {\n          html: '<drizzle-contract contractName=\"ComplexStorage\" method=\"get_uintarray\" />'\n        },\n        singleDD: {\n          html: '<drizzle-contract contractName=\"ComplexStorage\" method=\"singleDD\" />'\n        }\n      }\n    };\n  }\n};",{"version":3,"sources":["ComplexStorage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAuCA,SAAA,UAAA,QAAA,MAAA;AAEA,eAAA;AACA,EAAA,IAAA,EAAA,gBADA;AAEA,EAAA,QAAA,gDACA,UAAA,CAAA,WAAA,EAAA,CAAA,iBAAA,CAAA,CADA,GAEA,UAAA,CAAA,SAAA,EAAA,CAAA,sBAAA,CAAA,CAFA;AAGA,IAAA,aAHA,2BAGA;AACA,aAAA,KAAA,eAAA,CAAA;AACA,QAAA,QAAA,EAAA,gBADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAAA,CAAA;AAIA,KARA;AASA,IAAA,QATA,sBASA;AACA,aAAA,KAAA,eAAA,CAAA;AACA,QAAA,QAAA,EAAA,gBADA;AAEA,QAAA,MAAA,EAAA;AAFA,OAAA,CAAA;AAIA;AAdA,IAFA;AAkBA,EAAA,IAlBA,kBAkBA;AACA,WAAA;AACA,MAAA,MAAA,EAAA;AACA,QAAA,aAAA,EAAA;AACA,UAAA,IAAA,EACA;AAFA,SADA;AAKA,QAAA,QAAA,EAAA;AACA,UAAA,IAAA,EACA;AAFA;AALA;AADA,KAAA;AAYA;AA/BA,CAAA","sourcesContent":["<template>\n  <div v-if=\"isDrizzleInitialized\">\n    <p>\n      <drizzle-contract\n        contractName=\"ComplexStorage\"\n        method=\"string1\"\n        label=\"bytes string1\"\n        toUtf8\n      />\n      <drizzle-contract\n        contractName=\"ComplexStorage\"\n        method=\"string2\"\n        label=\"bytes32 string2\"\n      />\n      <drizzle-contract\n        contractName=\"ComplexStorage\"\n        method=\"string2\"\n        label=\"bytes32 string2 toUtf8\"\n        toUtf8\n      />\n    </p>\n\n    <h3>Display an Object</h3>\n    <div class=\"flex-container\">\n      <div class=\"code\">{{ sample.singleDD.html }}</div>\n      <drizzle-contract contractName=\"ComplexStorage\" method=\"singleDD\" />\n    </div>\n\n    <h3>Display an Array</h3>\n    <div class=\"flex-container\">\n      <div class=\"code\">{{ sample.get_uintarray.html }}</div>\n      <drizzle-contract contractName=\"ComplexStorage\" method=\"get_uintarray\" />\n    </div>\n  </div>\n\n  <div v-else>Loading...</div>\n</template>\n\n<script>\nimport { mapGetters } from 'vuex'\n\nexport default {\n  name: 'ComplexStorage',\n  computed: {\n    ...mapGetters('contracts', ['getContractData']),\n    ...mapGetters('drizzle', ['isDrizzleInitialized']),\n    get_uintarray() {\n      return this.getContractData({\n        contract: 'ComplexStorage',\n        method: 'get_uintarray'\n      })\n    },\n    singleDD() {\n      return this.getContractData({\n        contract: 'ComplexStorage',\n        method: 'singleDD'\n      })\n    }\n  },\n  data() {\n    return {\n      sample: {\n        get_uintarray: {\n          html:\n            '<drizzle-contract contractName=\"ComplexStorage\" method=\"get_uintarray\" />'\n        },\n        singleDD: {\n          html:\n            '<drizzle-contract contractName=\"ComplexStorage\" method=\"singleDD\" />'\n        }\n      }\n    }\n  }\n}\n</script>\n\n<style scoped>\ndiv.code {\n  align-self: center;\n}\n\ndiv.flex-container {\n  background-color: #efefef;\n  display: flex;\n}\n\ndiv.flex-container > div {\n  flex: 1;\n}\n</style>\n"],"sourceRoot":"src"}]}