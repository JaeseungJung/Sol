/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { InjeolmiPrice } from "../InjeolmiPrice";

export class InjeolmiPrice__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    _ijm: string,
    _pool: string,
    overrides?: Overrides
  ): Promise<InjeolmiPrice> {
    return super.deploy(_ijm, _pool, overrides || {}) as Promise<InjeolmiPrice>;
  }
  getDeployTransaction(
    _ijm: string,
    _pool: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(_ijm, _pool, overrides || {});
  }
  attach(address: string): InjeolmiPrice {
    return super.attach(address) as InjeolmiPrice;
  }
  connect(signer: Signer): InjeolmiPrice__factory {
    return super.connect(signer) as InjeolmiPrice__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): InjeolmiPrice {
    return new Contract(address, _abi, signerOrProvider) as InjeolmiPrice;
  }
}

const _abi = [
  {
    constant: true,
    inputs: [],
    name: "ijm",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "pool",
    outputs: [
      {
        name: "",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    constant: true,
    inputs: [],
    name: "price",
    outputs: [
      {
        name: "",
        type: "uint256",
      },
    ],
    payable: false,
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        name: "_ijm",
        type: "address",
      },
      {
        name: "_pool",
        type: "address",
      },
    ],
    payable: false,
    stateMutability: "nonpayable",
    type: "constructor",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b506040516040806105668339810180604052604081101561003057600080fd5b810190808051906020019092919080519060200190929190505050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555080600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055505050610489806100dd6000396000f3fe608060405234801561001057600080fd5b50600436106100415760003560e01c8063110d40251461004657806316f0115b14610090578063a035b1fe146100da575b600080fd5b61004e6100f8565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b61009861011d565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6100e2610143565b6040518082815260200191505060405180910390f35b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006102a16000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff166040518263ffffffff1660e01b8152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060206040518083038186803b15801561020857600080fd5b505afa15801561021c573d6000803e3d6000fd5b505050506040513d602081101561023257600080fd5b81019080805190602001909291905050506102936305f5e100600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16316102a690919063ffffffff16565b61032c90919063ffffffff16565b905090565b6000808314156102b95760009050610326565b60008284029050828482816102ca57fe5b0414610321576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040180806020018281038252602181526020018061043d6021913960400191505060405180910390fd5b809150505b92915050565b600061036e83836040518060400160405280601a81526020017f536166654d6174683a206469766973696f6e206279207a65726f000000000000815250610376565b905092915050565b60008083118290610422576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004018080602001828103825283818151815260200191508051906020019080838360005b838110156103e75780820151818401526020810190506103cc565b50505050905090810190601f1680156104145780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b50600083858161042e57fe5b04905080915050939250505056fe536166654d6174683a206d756c7469706c69636174696f6e206f766572666c6f77a165627a7a72305820dbf59a37bac95d1b2544ddaec73bfd284b515ea2885eff7bc5dfe9739def93230029";
